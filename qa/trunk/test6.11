#!/usr/bin/expect
#
# Purpose: Test of SLURM functionality
#          Test of scancel quiet option (--quiet option).
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
#
source ./globals

set test_id      "6.11"
set exit_code    0
set file_in      "test$test_id.input"
set job_id       0

print_header $test_id

#
# Submit a job so we have something to work with
#
spawn $srun --batch --output=/dev/null --error=/dev/null --hold -t1 $bin_id
expect {
	-re "jobid ($number) submitted" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		kill_srun
		set exit_code 1
		exp_continue
	}
	eof {
		wait
	}
}

#
# Test basic scancel
#
spawn $scancel $job_id
expect {
	-re "error" {
		set exit_code 1
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: scancel not responding\n"
		set exit_code 1
	}
	eof {
		wait
	}
}

#
# Test basic scancel with job already killed
#
set matches 0
spawn $scancel $job_id
expect {
	-re "error:" {
		send_user "This error is expected, no worries\n"
		set matches 1
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: scancel not responding\n"
		set exit_code 1
	}
	eof {
		wait
	}
}
if {$matches == 0} {
	send_user "\nFAILURE: no error for cancelling job that was already killed\n"
	set exit_code 1
}

#
# Test of --quiet option
spawn $scancel --quiet $job_id
expect {
	re "error" {
		set exit_code 1
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: scancel not responding\n"
		set exit_code 1
	}
	eof {
		wait
	}
}

if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
}
exit $exit_code

