#!/usr/bin/expect
#
# Purpose: Test of SLURM functionality
#          Test of wait option (--wait option).
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
#
# Note:    This script generates and then deletes files in the working directory 
#          named test1.15.input, test1.15.output, and test1.15.error
#
source ./globals

set test_id     "1.15"
set exit_code   0
set file_in     "test$test_id.input"
set matches     0

print_header $test_id

#
# Delete left-over input script
# Build input script file
#
exec $bin_rm -f $file_in
exec echo "#!$bin_bash"                >$file_in
exec echo "if ((\$SLURM_PROCID== 1))" >>$file_in
exec echo "   then exit"              >>$file_in
exec echo "fi"                        >>$file_in
exec echo "$bin_sleep 300"            >>$file_in
exec $bin_chmod 700 $file_in

#
# Spawn a shell via srun and send exit command to task 1 only
#
set timeout $max_job_delay
spawn $srun -n10 -N1 -O -W2 -t5 $file_in
expect {
	-re "First task exited" {
		send_user "This error is expected, no worries\n"
		incr matches
		exp_continue
	}
	-re "task.0,2-9.: running" {	# bracket escape not working
		incr matches
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		kill_srun
		set exit_code 1
		exp_continue
	}
	eof {
		wait
	}
}

exec $bin_rm -f $file_in
if {$matches != 2} {
	send_user "\nFAILURE: problem with wait option\n"
	set exit_code 1
}
if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
}
exit $exit_code
