#!/usr/bin/expect
#
# Purpose: Test of SLURM functionality
#          Confirm that node sharing flags are respected  (--nodelist and 
#          --share options).
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "WARNING: ..." with an explanation of why the test can't be made, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
#
source ./globals

set test_id      "1.37"
set exit_code    0
set file_err     "test$test_id.error"
set file_in      "test$test_id.input"
set file_out     "test$test_id.output"
set job_id1      0
set host_name    ""

print_header $test_id

#
# Submit a job and get the node's name
#
set timeout $max_job_delay
spawn $srun -l -t1 $bin_hostname
expect {
	-re "0: ($alpha_numeric)" {
		set host_name $expect_out(1,string)
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		kill_srun
		set exit_code 1
		exp_continue
	}
	eof {
		wait
	}
}
if {[string compare $host_name ""] == 0} {
	send_user "\nFAILURE: Did not get hostname of task 0\n"
	exit 1
}

#
# Delete left-over input script
# Build input script file
#
exec $bin_rm -f $file_in
exec echo "#!$bin_bash"         >$file_in
exec echo "$srun $bin_sleep 5" >>$file_in
exec $bin_chmod 700 $file_in

#
# Submit two jobs to the same node, one with no sharing, the other 
# with sharing permitted. Insure the first job completes before the 
# second job is started.
#
spawn $srun --batch -N1 --nodelist=$host_name -t1 --output=$file_out --error=$file_err  $file_in
expect {
	-re "jobid ($number) submitted" {
		set job_id1 $expect_out(1,string)
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		kill_srun
		exit 1
	}
	eof {
		wait
	}
}
if {$job_id1 == 0} {
	send_user "\nFAILURE: srun failed to report jobid\n"
	kill_srun
	exit 1
}

set waited 1
set timeout [expr $timeout + 5]
spawn $srun -N1 --nodelist=$host_name -t1 --share $scontrol -o show job $job_id1
expect {
	-re "JobState=RUN" {
		set waited 0 
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		kill_srun
		exit 1
	}
	eof {
		wait
	}
}
if {$waited == 0} {
	send_user "\nFAILURE: srun failed to wait for non-sharing job to complete\n"
	set exit_code 1
}

if {$exit_code == 0} {
	exec $bin_rm -f $file_err $file_in $file_out
	send_user "\nSUCCESS\n"
}
exit $exit_code
