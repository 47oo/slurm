#!/usr/bin/expect
#
# Purpose: Stress test of stdin broadcast
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
#
# Note:    This script generates and then deletes files in the working directory 
#          named test9.1.input and test9.1.output
#
source ./globals

set test_id      "9.1"
set cycle_count  100
set exit_code    0
set file_in      "test$test_id.input"
set file_out     "test$test_id.output"
set node_cnt     "1-4"
set other_opts   "-O"
set task_cnt     $max_stress_tasks

print_header $test_id

# Execute an srun job to cat input_file to output_file, wait for completion
# Returns 0 on successful completion, returns 1 otherwise
proc run_cat_job { input_file output_file } {
	global bin_cat bin_rm srun node_cnt other_opts task_cnt
	exec $bin_rm -f $output_file

	spawn $srun --input=$input_file --output=$output_file --error=/dev/null -n$task_cnt -N$node_cnt $other_opts -t1 $bin_cat -
	expect {
		timeout {
			send_user "\nFAILURE: srun not responding\n"
			kill_srun
			return 1
		}
		eof {
			wait
		}
	}

	return [wait_for_file $output_file]
}

#
# Create a sizable text file
#
exec $bin_rm -f $file_in $file_out
exec $bin_cat /etc/hosts   >$file_in
exec $bin_cat /etc/passwd >>$file_in
set stdin_lines [get_line_cnt $file_in]
set stdout_target [expr $stdin_lines * $task_cnt]

#
# Run cycle_count jobs to copy job input to job output and compare sizes
#
set success_cnt 0
set timeout $max_job_delay
for {set inx 0} {$inx < $cycle_count} {incr inx} {
	if {[run_cat_job $file_in $file_out]} {
		set exit_code 1
	}
	set stdout_lines [get_line_cnt $file_out]
	if {$stdout_lines != $stdout_target} {
		exec $bin_sleep 1
		set stdout_lines [get_line_cnt $file_out]
	}
	if {$stdout_lines != $stdout_target} {
		send_user "\nFAILURE: stdout is incomplete\n"
		set exit_code 1
	} else {
		incr success_cnt
	}
}
exec $bin_rm -f $file_in $file_out

if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
} else {
	send_user "\nFAILURE: Only $success_cnt of $cycle_count"
	send_user " copy tests passed\n"
}
exit $exit_code
