#!/usr/bin/expect
#
# Purpose: Stress test multiple simultaneous commands via multiple threads
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
#
#
source ./globals

set test_id      "9.7"
set exit_code    0
set file_script  "test$test_id.bash"
set interations  5
set sleep_time   1
set task_cnt     10

print_header $test_id

#
# Initiate $task_cnt parallel tasks
#
for {set inx 0} {$inx < $task_cnt} {incr inx} {
	spawn $file_script $sleep_time $interations
	set task_id($inx) $spawn_id
}

#
# Run cycle_count jobs to copy job input to job output and compare sizes
#
set success_cnt 0
set timeout [expr $max_job_delay * $interations * $task_cnt]
for {set inx 0} {$inx < $task_cnt} {incr inx} {
	expect {
		-i $task_id($inx)
		"########## EXIT_CODE ($number) ########## " {
			if {expect_out(1,string) == 0} {
				incr success_cnt
			}
		}
	}
}

if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
} else {
	send_user "\nFAILURE: Only $success_cnt of $task_cnt tests passed\n"
}
exit $exit_code
