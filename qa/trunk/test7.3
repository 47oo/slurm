#!/usr/bin/expect
############################################################################
# Purpose:  Test of slurm_spawn API (needed on IBM SP systems).
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
#
# Note:    This script generates and then deletes files in the working directory
#          named test7.3.prog and test7.3.io
############################################################################
# Copyright (C) 2004 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# UCRL-CODE-2002-040.
# 
# This file is part of SLURM, a resource management program.
# For details, see <http://www.llnl.gov/linux/slurm/>.
#  
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
# 
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
# 
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
############################################################################
source ./globals

set test_id     "7.3"
set exit_code   0
set io_prog     "test$test_id.io"
set test_prog   "test$test_id.prog"

print_header $test_id

#
# Delete left-over programs and rebuild them 
#
exec $bin_rm -f $io_prog $test_prog

exec $bin_make $io_prog
exec $bin_chmod 700 $io_prog

exec $bin_cc ${test_prog}.c -g -pthread -o ${test_prog} -I${slurm_dir}/include -Wl,--rpath=${slurm_dir}/lib -L${slurm_dir}/lib -lslurm
exec $bin_chmod 700 $test_prog

#
# Spawn initial program via srun
#
set timeout $max_job_delay
set job_id 0
set matches 0
set task_cnt 1
spawn $test_prog 1 2
expect {
	-re "job_id ($number)" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	-re "Starting ($number) tasks" {
		set task_cnt $expect_out(1,string)
		exp_continue
	}
	-re "task 0 write to stdout" {
		incr matches
		exp_continue
	}
	-re "task 0 write to stderr" {
		incr matches
		exp_continue
	}
	-re "task 0 read from stdin:test message" {
		incr matches
		exp_continue
	}
	-re "task 1 write to stdout" {
		incr matches
		exp_continue
	}
	-re "task 1 write to stderr" {
		incr matches
		exp_continue
	}
	-re "task 1 read from stdin:test message" {
		incr matches
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: spawn_task not responding\n"
		exec $scancel --quiet $job_id
		set exit_code 1
		exp_continue
	}
	eof {
		wait
	}
}

if {$matches != [expr $task_cnt * 3]} {
	send_user "\nFAILURE: spawn_task communications failure\n"
	set exit_code   1
}

if {$exit_code == 0} {
	exec $bin_rm -f $io_prog $test_prog
	send_user "\nSUCCESS\n"
}
exit $exit_code
