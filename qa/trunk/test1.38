#!/usr/bin/expect
#
# Purpose: Test of SLURM functionality
#          Test srun handling of SIGINT to get task status or kill the job
#          (--quit-on-interrupt option).
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
#
source ./globals

set test_id     "1.38"
set exit_code   0
set file_in     "test$test_id.input"

print_header $test_id

#
# Delete left-over input script
# Build input script file
#
exec $bin_rm -f $file_in
exec echo "#!$bin_bash"             >$file_in
exec echo "$bin_echo WAITING"      >>$file_in
exec echo "$bin_sleep 1000"        >>$file_in
exec $bin_chmod 700 $file_in

#
# Get uid
#
spawn $bin_id -u
expect {
	-re "($number)" {
		set uid $expect_out(1,string)
	}
	eof {
		wait
	}
}

#
# Spawn initial program via srun and use SIGINT to status
# Note: For systems supporting proper pthreads, instead use
#       exec $bin_kill -INT $srun_pid
#
set timeout $max_job_delay
set matches 0
set job_id  0
spawn $srun -v -N1 -t1 --unbuffered $file_in
set srun_pid [exp_pid]
expect {
	-re "launching ($number).0" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	-re "WAITING" {
		incr matches
		exec $bin_pkill -INT -u $uid srun
		exp_continue
	}
	-re "srun: interrupt" {
		incr matches
		exp_continue
	}
	-re "srun: task0: running" {
		incr matches
		cancel_job $job_id
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		kill_srun
		set exit_code 1
		exp_continue
	}
	eof {
		wait
	}
}
if {$matches != 3} {
	send_user "\nFAILURE: srun failed to properly process SIGINT\n"
	set exit_code 1
}

#
# Spawn initial program via srun and use SIGINT to kill
# Note: For systems supporting proper pthreads, instead use
#       exec $bin_kill -INT $srun_pid
#
set matches 0
set job_id  0
spawn $srun -v -N1 -t1 --unbuffered --quit-on-interrupt $file_in
set srun_pid [exp_pid]
expect {
	-re "launching ($number).0" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	-re "WAITING" {
		incr matches
		exec $bin_pkill -INT -u $uid srun
		exp_continue
	}
	-re "srun: interrupt" {
		set matches = -999
		exp_continue
	}
	-re "srun: task0: running" {
		set matches = -999
		exp_continue
	}
	-re "forcing job termination" {
		incr matches
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		kill_srun
		set exit_code 1
		exp_continue
	}
	eof {
		wait
	}
}
if {$matches != 2} {
	send_user "\nFAILURE: srun failed to properly process SIGINT\n"
	set exit_code 1
}

#
# Post-processing
#
if {$exit_code == 0} {
	exec $bin_rm -f $file_in
	send_user "\nSUCCESS\n"
}
exit $exit_code
