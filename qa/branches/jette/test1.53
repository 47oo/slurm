#!/usr/bin/expect
#
# Purpose: Test of SLURM functionality
#          Test of contiguous option with multiple nodes (--contiguous option).
#          Also see test1.14.
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "WARNING: ..." with an explanation of why the test can't be made, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
#
# NOTE:    This assumes node names are of the form <alpha><number>, where 
#          the value of <number> indicates the nodes relative location. 
#          Change tha node name parsing logic as needed for other formats.
#
source ./globals

set test_id     "1.53"
set exit_code   0

print_header $test_id

#
# Submit a 3 contiguous node job
#
set host_0_name      ""
set host_1_name      ""
set host_2_name      ""
set host_0_num       0
set host_1_num       0
set host_2_num       0
set timeout $max_job_delay
spawn $srun -N3 --contiguous -l -t1 $bin_hostname  
expect {
	-re "More processors requested than permitted" {
		send_user "\nWARNING: can't test srun task distribution\n"
		exit $exit_code
	}
	-re "0: ($alpha)($number)" {
		set host_0_name $expect_out(1,string)
		set host_0_num  $expect_out(2,string)
		exp_continue
	}
	-re "1: ($alpha)($number)" {
		set host_1_name $expect_out(1,string)
		set host_1_num  $expect_out(2,string)
		exp_continue
	}
	-re "2: ($alpha)($number)" {
		set host_2_name $expect_out(1,string)
		set host_2_num  $expect_out(2,string)
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		kill_srun
		set exit_code 1
		exp_continue
	}
	eof {
	}
}

#
# Verify node count
#
if {[string compare $host_0_name ""] == 0} {
	send_user "\nFAILURE: Did not get hostname of task 0\n"
	set exit_code   1	
}
if {[string compare $host_1_name ""] == 0} {
	send_user "\nFAILURE: Did not get hostname of task 1\n"
	set exit_code   1	
}
if {[string compare $host_2_name ""] == 0} {
	send_user "\nFAILURE: Did not get hostname of task 2\n"
	set exit_code   1	
}

#
# Verify node sequence number
#
if {$host_1_num != [expr $host_0_num + 1]} {
	send_user "\nFAILURE: node sequence number not contiguous"
	set exit_code   1	
}
if {$host_2_num != [expr $host_1_num + 1]} {
	send_user "\nFAILURE: node sequence number not contiguous"
	set exit_code   1	
}

if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
}
exit $exit_code
