#!/usr/bin/expect
#
# Purpose: Test of SLURM functionality
#          Confirm that a job executes with various launch thread fanouts
#          (--threads option).
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "WARNING: ..." with an explanation of why the test can't be made, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
#
source ./globals

set test_id     "1.22"
set exit_code   0

print_header $test_id

#
# Submit a job with one thread fanout
#
set host_0      ""
set timeout $max_job_delay
spawn $srun -N1-64 -l --threads=1 -t1 $bin_hostname  
expect {
	-re "0: ($alpha_numeric)" {
		set host_0 $expect_out(1,string)
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		kill_srun
		set exit_code 1
		exp_continue
	}
	eof {
	}
}

#
# Verify node registration
#
if {[string compare $host_0 ""] == 0} {
	send_user "\nFAILURE: Did not get hostname of task 0\n"
	set exit_code   1	
}

#
# Submit a job with 32 thread fanout
#
set host_0      ""
set timeout $max_job_delay
spawn $srun -N1-64 -l --threads=32 -t1 $bin_hostname  
expect {
	-re "0: ($alpha_numeric)" {
		set host_0 $expect_out(1,string)
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		kill_srun
		set exit_code 1
		exp_continue
	}
	eof {
	}
}

#
# Verify node registration
#
if {[string compare $host_0 ""] == 0} {
	send_user "\nFAILURE: Did not get hostname of task 0\n"
	set exit_code   1	
}

if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
}
exit $exit_code
