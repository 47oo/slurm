#!/usr/bin/expect
#
# Purpose: Test of SLURM functionality
#          Check partition information, both long and short (--long and 
#          --summarize options) and partition filtering (--partition option).
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
#
source ./globals

set test_id     "4.3"
set def_part    0
set exit_code   0
set matches     0

print_header $test_id

#
# Check the sinfo summarize format
# Just looking for the regular expression "\*" causes errors in 
# looking for the default partition, so the logic looks for an 
# alpha-numeric partition name followed by the state (UP|DOWN) 
# then looks for the partition name suffix of "*"
#
 
spawn $sinfo --summarize  
expect {
	-re "PARTITION" {
		incr matches
		exp_continue
	}
	-re "AVAIL" {
		incr matches
		exp_continue
	}
	-re "NODES" {
		incr matches
		exp_continue
	}
	-re "NODE_LIST" {
		incr matches
		exp_continue
	}
	-re "STATE" {
		incr matches -1
		exp_continue
	}
	-re "($end_of_line)($alpha_numeric)(\[ \*\]) *UP" {
		if (![string compare $expect_out(3,string) "*"]) {
			set def_part 1
			set def_part_name $expect_out(2,string)
		}
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: sinfo not responding\n"
		set exit_code 1
	}
	eof {
	}
}

if {$matches != 4} {
	send_user "\nFAILURE: sinfo partition summarize format error\n"
	set exit_code 1
}
if {$def_part == 0} {
	send_user "\nFAILURE: sinfo shows no available default partition\n"
	set exit_code 1
}

#
# Check the sinfo summarize format with partition filter
#
 
set matches     0
spawn $sinfo --summarize --partition=$def_part_name
expect {
	-re "UP" {
		incr matches
		exp_continue
	}
	-re "DOWN" {
		incr matches
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: sinfo not responding\n"
		set exit_code 1
	}
	eof {
	}
}

if {$matches != 1} {
	send_user "\nFAILURE: sinfo partition filtering error\n"
	set exit_code 1
}

#
# Check the sinfo regular format
#
 
set matches     0
spawn $sinfo  
expect {
	-re "PARTITION" {
		incr matches
		exp_continue
	}
	-re "AVAIL" {
		incr matches
		exp_continue
	}
	-re "NODES" {
		incr matches
		exp_continue
	}
	-re "STATE" {
		incr matches
		exp_continue
	}
	-re "NODE_LIST" {
		incr matches
		exp_continue
	}
	-re "MAX_TIME" {
		incr matches -1
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: sinfo not responding\n"
		set exit_code 1
	}
	eof {
	}
}

if {$matches != 5} {
	send_user "\nFAILURE: sinfo partition normal format error\n"
	set exit_code 1
}

#
# Check the sinfo long format
#
 
set matches     0
spawn $sinfo --long  
expect {
	-re "PARTITION" {
		incr matches
		exp_continue
	}
	-re "AVAIL" {
		incr matches
		exp_continue
	}
	-re "NODES" {
		incr matches
		exp_continue
	}
	-re "STATE" {
		incr matches
		exp_continue
	}
	-re "MAX_TIME" {
		incr matches
		exp_continue
	}
	-re "GROUPS" {
		incr matches
		exp_continue
	}
	-re "NODE_LIST" {
		incr matches
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: sinfo not responding\n"
		set exit_code 1
	}
	eof {
	}
}

if {$matches != 7} {
	send_user "\nFAILURE: sinfo partition long format error\n"
	set exit_code 1
}
if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
}
exit $exit_code
