#!/usr/bin/expect
#
# Purpose: Test of SLURM functionality
#          Check sinfo formating options (--format option and SINFO_FORMAT
#          environment variable).
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
#
source ./globals

set test_id      "4.9"
set exit_code    0
set matches      0

print_header $test_id

#
# Check the sinfo format output via command line
#

# For some reason, quoting the format value breaks expect, 
#  but this passes the entire format in a single argv entry
set format "--format=partition=%P node_cnt=%D"
spawn $sinfo --noheader $format
expect {
	-re "partition=($alpha_numeric).* node_cnt=($number)" {
		incr matches
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: sinfo not responding\n"
		set exit_code 1
	}
	eof {
	}
}

if {$matches == 0} {
	send_user "\nFAILURE: sinfo format error\n"
	set exit_code 1
}

#
# Check the sinfo format output via environment variable
#

set matches      0
set env(SINFO_FORMAT) "part=%P nodes=%D"
spawn $sinfo --noheader
expect {
	-re "part=($alpha_numeric).* nodes=($number)" {
		incr matches
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: sinfo not responding\n"
		set exit_code 1
	}
	eof {
	}
}
unset env(SINFO_FORMAT)

if {$matches == 0} {
	send_user "\nFAILURE: sinfo format error\n"
	set exit_code 1
}

if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
}
exit $exit_code

