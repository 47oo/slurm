#!/usr/bin/expect
############################################################################
# Purpose: Test of Moab functionality
#           pstat -T -f <job_id>  (full details for specific terminated job)
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
############################################################################
# Copyright (C) 2006 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
############################################################################
source ./globals

set test_id     "41.7"
set exit_code   0
set file_in     "test$test_id.input"
set job_id      0

print_header $test_id

#
# Delete left-over stdin/out/err files
# Build stdin file
#
exec rm -f $file_in
make_bash_script $file_in "
  sleep 40
  exit 0
"

#
# Test of psub bank account
#
set psub_pid [spawn $psub -x -r TEST.$test_id -b dummy_acct -o /dev/null -eo -tW 1 $file_in]  
expect {
	-re "($number) submitted" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: psub not responding\n"
		slow_kill $psub_pid
		set exit_code 1
	}
	eof {
		wait
	}
}
if {$job_id == 0} {
	send_user "\nFAILURE: psub job submit failure\n"
	exit 1
}

#
# Wait for job to start then cancel it and check for it using pstat
#
if {[wait_for_job $job_id RUNNING] != 0} {
	send_user "\nFAILURE: error on job startup\n"
	set exit_code 1
}
cancel_job $job_id
set name_matches  0
set pstat_pid [spawn $pstat -T -f mdev.$job_id]
expect {
	-re "job name: *TEST.$test_id" {
		incr name_matches
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: pstat not responding\n"
		slow_kill $pstat_pid
		set exit_code 1
		exp_continue
	}
	eof {
		wait
	}
}
if {$name_matches != 1} {
	send_user "\nFAILURE: psub job name missing\n"
	set exit_code 1
}

if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
	exec rm -f $file_in
}
exit $exit_code
