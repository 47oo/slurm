#!/usr/bin/expect
############################################################################
# Purpose: Test of Moab functionality
#          Test for LCRM environment variables set in spawned shell
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
############################################################################
# Copyright (C) 2006 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
############################################################################
source ./globals

set test_id          "40.14"
set exit_code        0
set file_in          "test$test_id.input"
set file_out         "test$test_id.output"

print_header $test_id

#
# Delete left-over stdin/out/err files
# Build stdin file
#
exec rm -f $file_in
make_bash_script $file_in "
  env | grep ENVIRONMENT
  env | grep PSUB_
  env | grep SESSARGS
  exit 0
"

#
# Spawn a job to print environment variables
#
exec rm -f $file_out
set job_id 0
set psub_pid [spawn $psub -x -o $file_out -eo -tW 1 $file_in]
expect {
	-re "($number) submitted" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: psub not responding\n"
		slow_kill $psub_pid
		set exit_code 1
	}
	eof {
		wait
	}
}
if {$job_id == 0} {
	send_user "\nFAILURE: psub job submit failure\n"
	exit 1
}
if {[wait_for_job $job_id DONE] != 0} {
	send_user "\nFAILURE: error on job\n"
	cancel_job $job_id
	exit 1
}

#
# Check for env vars
#     ENVIRONMENT    "BATCH"
#     HOME           your home directory on the executing
#                    host.
#     PATH           "/bin:/usr/bin"
#     PCS_TMPDIR     the name of a temporary directory, if
#                    needed. 
#     PSUB_DEP_JOBID the job on which this job depended.
#     PSUB_HOME      set to $HOME on the submission host.
#     PSUB_HOST      the submission host name.
#     PSUB_JOBID     the LCRM job identifier.
#     PSUB_LOGNAME   set to $LOGNAME on the submission host.
#     PSUB_PATH      set to $PATH on the submission host.
#     PSUB_REQNAME   the job's specified or assigned jobname.
#     PSUB_SUBDIR    the directory from which you invoke psub
#                    on the submission host.
#     PSUB_TZ        set to $TZ on the submission host.
#     PSUB_USER      set to $USER on the submission host.
#     PSUB_WORKDIR   the same value as PCS_TMPDIR if that
#                    environment variable is set. Otherwise,
#                    your home directory on the execution
#                    host.
#     SHELL          the path name of the shell that
#                    interprets the job script.
#     SESSARGS       the arguments to psub.
#
set to_match 10
set matches  0
if {[wait_for_file $file_out] == 0} {
	spawn sort $file_out
	expect {
		-re  "ENVIRONMENT" {
			incr matches
			exp_continue
		}
		-re "PSUB_HOME" {
			incr matches
			exp_continue
		}
		-re "PSUB_HOST" {
			incr matches
			exp_continue
		}
		-re "PSUB_JOBID" {
			incr matches
			exp_continue
		}
		-re "PSUB_LOGNAME" {
			incr matches
			exp_continue
		}
		-re "PSUB_PATH" {
			incr matches
			exp_continue
		}
		-re "PSUB_REQNAME" {
			incr matches
			exp_continue
		}
		-re "PSUB_SUBDIR" {
			incr matches
			exp_continue
		}
		-re "PSUB_USER" {
			incr matches
			exp_continue
		}
		-re "PSUB_WORKDIR" {
			incr matches
			exp_continue
		}
		eof {
			wait
		}
	}
}
if {$matches != $to_match} {
	send_user "\nFAILURE: only found $matches of $to_match environment variables\n"
	set exit_code 1
}

if {$exit_code == 0} {
	exec rm -f $file_in $file_out
	send_user "\nSUCCESS\n"
}
exit $exit_code
