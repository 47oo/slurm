Index: mpid/ch_p4/p4/lib/p4_sock_cr.c
===================================================================
--- mpid/ch_p4/p4/lib/p4_sock_cr.c	(.../mpich)	(revision 11551)
+++ mpid/ch_p4/p4/lib/p4_sock_cr.c	(.../mpich1/trunk)	(working copy)
@@ -601,7 +601,21 @@
 		    */
 		}
 
-		rc = execlp(remote_shell, remote_shell,
+		/*
+		p4_dprintf("srun -N1 -w %s --input=/dev/null --unbuffered %s\n",
+			host, pgm);
+		p4_dprintf("  %s %s %s -p4yourname %s -p4rmrank %s\n",
+			myhostname, serv_port_c, am_slave_c,
+			host, rm_rank_str);
+		*/
+		if (getenv("SLURM_JOBID")) {
+		    rc = execlp("srun", "srun", "-N1", "-w", host,
+			    "--input=/dev/null", "--unbuffered", pgm,
+			    myhostname, serv_port_c, "-p4amslave", 
+			    "-p4yourname", host, "-p4rmrank", rm_rank_str,
+			    NULL);
+		} else {
+		    rc = execlp(remote_shell, remote_shell,
 			    host, 
 #if !defined(RSH_HAS_NO_L)
 			    "-l", username, 
@@ -614,6 +628,7 @@
 			    "-p4yourname", host, "-p4rmrank", rm_rank_str,
 #endif
 			    NULL);
+		}
 #endif /* RSH_NEEDS_OPTS */
 #endif /* Short_circuit_localhost */
 		/* host,"-n","cluster","5",pgm,myhostname,serv_port_c,0); for butterfly */
Index: mpid/ch_p4/mpirun.ch_p4.in
===================================================================
--- mpid/ch_p4/mpirun.ch_p4.in	(.../mpich)	(revision 11551)
+++ mpid/ch_p4/mpirun.ch_p4.in	(.../mpich1/trunk)	(working copy)
@@ -225,12 +225,23 @@
     fi
     #
     # Add rsh'ery if requested
+    # Or use srun on SLURM systems
     #
     if [ "$nolocal" = 1 ] ; then
-        if [ "$stdinfile" = "/dev/null" ] ; then
-            doitall="$doitall $rshcmd -n $machinehead"
+        if [ -n "$SLURM_JOBID" ] ; then
+            doitall="$doitall srun -N1 -w $machinehead"
+            if [ -z "$stdinfile" ] ; then
+                doitall="$doitall --input=/dev/null"
+            else
+                doitall="$doitall --input=$stdinfile"
+                unset stdinfile
+            fi
         else
-            doitall="$doitall $rshcmd $machinehead"
+            if [ "$stdinfile" = "/dev/null" ] ; then
+                doitall="$doitall $rshcmd -n $machinehead"
+            else
+                doitall="$doitall $rshcmd $machinehead"
+            fi
         fi
 	if [ "$move_pgfile_to_master" = "yes" ] ; then
 	    $rcpcmd $p4pgfile $machinehead:$p4pgfile_master
Index: README
===================================================================
--- README	(.../mpich)	(revision 11551)
+++ README	(.../mpich1/trunk)	(working copy)
@@ -171,3 +171,25 @@
 this newsgroup is for discussions about MPI, not any particular implementation
 of MPI.
 
+
+SLURM:
+
+This patch makes use of SLURM's srun command to launch tasks. The following 
+actions are taken if SLURM_JOBID is set.
+1. It gets a list of allocated nodes by running "srun hostname | sort -u"
+   and uses that as a mpirun machinefile.
+2. It uses srun to launch tasks rather than rsh.
+
+To use, make a SLURM resource allocation then execute mpirun within it.
+For example:
+  $ salloc -N4 bash
+  $ mpirun -np 4 a.out
+  $ exit      # release the SLURM allocation
+Or for a batch job submission:
+  $ cat my.script
+  #!/bin/bash
+  mpirun -np 4 a.out
+  $ sbatch -N4 my.script
+
+NOTE: This code is very definitely not optimized for SLURM. We'll work on 
+that later.
Index: util/mpirun.pg.in
===================================================================
--- util/mpirun.pg.in	(.../mpich)	(revision 11551)
+++ util/mpirun.pg.in	(.../mpich1/trunk)	(working copy)
@@ -31,7 +31,19 @@
        . mpirun.args
    fi
 fi
+
 #
+# Get machinefile from SLURM
+if  [ -n "$SLURM_JOBID" ] ; then
+   srun hostname | sort -u > .slurm.hostlist."$SLURM_JOBID"
+   machineFile=".slurm.hostlist.$SLURM_JOBID"
+   eval machineFile$narch=".slurm.hostlist.$SLURM_JOBID"
+   if [ -z "$SLURMD_NODENAME" ] ; then
+       nolocal=1
+   fi
+fi
+
+#
 # Get the defaults (this is in preparation for multi-architecture versions)
 # 
 if [ $narch = 0 ] ; then
@@ -372,3 +384,9 @@
 	break
     done
 fi
+#
+# Remove machine file generated by SLURM
+if  [ -n "$SLURM_JOBID" ] ; then
+    rm -f .slurm.hostlist."$SLURM_JOBID"
+fi
+
Index: util/mpirun.args.in
===================================================================
--- util/mpirun.args.in	(.../mpich)	(revision 11551)
+++ util/mpirun.args.in	(.../mpich1/trunk)	(working copy)
@@ -263,6 +263,10 @@
 	shift
 	;;
     -machinefile)
+        if [ -n $SLURM_JOBID ] ; then
+           echo "error: machinefile incompatible with SLURM"
+           exit 1
+        fi
         machineFile="$1"
 	eval machineFile$narch="$1"
 	shift
