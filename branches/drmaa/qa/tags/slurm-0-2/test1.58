#!/usr/bin/expect
#
# Purpose: Test of SLURM functionality
#          Basic test of MPI functionality
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "WARNING: ..." with an explanation of why the test can't be made, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
#
source ./globals

set test_id            "1.58"
set exit_code          0
set file_in            "test$test_id.input"
set file_out           "test$test_id.output"
set file_err           "test$test_id.error"
set job_id             0

print_header $test_id

#
# Test for existence of simple program (mpi_ping)
#
if {[info exists mpi_ping] == 0} {
	send_user "\nWARNING: mpi_program not defined, can't perform mpi testing\n"
	exit 0
}
if {[file executable $mpi_ping] == 0} {
	send_user "\nWARNING: mpi_program $mpi_ping does not exists\n"
	exit 0
}

# Delete left-over input script plus stdout/err files
# Build input script file
#
exec $bin_rm -f $file_in $file_out $file_err
exec echo "#!$bin_bash"							 >$file_in
exec echo "$bin_echo test1_N3_n6_cyclic"				>>$file_in
exec echo "$srun -N3 -n6 --distribution=cyclic $mpi_ping 8"		>>$file_in
exec echo "$bin_echo test2_N3_n6_block"					>>$file_in
exec echo "$srun -N3 -n6 --distribution=block  $mpi_ping 8"		>>$file_in
exec echo "$bin_echo test3_N3_n4_cyclic"				>>$file_in
exec echo "$srun -N3 -n4 --distribution=cyclic $mpi_ping 8"		>>$file_in
exec echo "$bin_echo test4_N3_n4_block"					>>$file_in
exec echo "$srun -N3 -n4 --distribution=block  $mpi_ping 8"		>>$file_in
exec echo "$bin_echo test5_N2_n4_with_hole"				>>$file_in
exec echo "$srun -N2 -n4 --distribution=cyclic --relative=\[0,2\]  $mpi_ping 8" >>$file_in
exec echo "$bin_echo TEST_COMPLETE"					>>$file_in
exec $bin_chmod 700 $file_in

#
# Spawn a srun batch job that uses stdout/err and confirm their contents
#
set timeout $max_job_delay
spawn $srun -N3 --batch --output=$file_out --error=$file_err -t4 $file_in
expect {
	-re "jobid ($number) submitted" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		kill_srun
		set exit_code 1
		exp_continue
	}
	eof {
	}
}

if {$job_id == 0} {
	send_user "\nFAILURE: batch submit failure\n"
	exit 1
}

#
# Wait for job to complete
#
if {[wait_for_job $job_id "DONE"] != 0} {
	send_user "\nFAILURE: waiting for job to complete\n"
	set exit_code 1
}

#
# Check for desired mpi_ping output in stdout
#
if {[wait_for_file $file_out] == 0} {
	set matches  0
	set complete 0
	spawn $bin_cat $file_out
	expect {
                -re "pinged" {
			incr matches
                        exp_continue
                }
		-re "TEST_COMPLETE" {
			incr complete
			exp_continue
		}
                eof {
                }
        }
	if {$matches != 12} {
		send_user "\nFAILURE: unexpected mpi_ping output\n"
		set exit_code 1
	} elseif {$complete == 0} {
		send_user "\nFAILURE: mpi_ping test failed to complete\n"
		set exit_code 1
	}
} else {
	set exit_code 1
}

if {$exit_code == 0} {
	exec $bin_rm -f $file_in $file_out $file_err
	send_user "\nSUCCESS\n"
}
exit $exit_code
